// Kh·ªüi t·∫°o ·ª©ng d·ª•ng
async function initializeApp() {
    try {
        await sheetsApi.initialize();
        console.log('üöÄ Google Sheets API ƒë√£ s·∫µn s√†ng');
        setupEventListeners();
        initializeMusic();
        await updateData();
    } catch (error) {
        console.error('‚ùå L·ªói kh·ªüi t·∫°o:', error);
        document.getElementById('error-message').innerHTML = 
            `<div class="alert alert-danger">
                C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi v·ªõi Google Sheets. 
                Vui l√≤ng t·∫£i l·∫°i trang ho·∫∑c li√™n h·ªá admin.
                <br>Chi ti·∫øt: ${error.message}
            </div>`;
    }
}

// Thi·∫øt l·∫≠p c√°c event listeners
function setupEventListeners() {
    const currentDate = new Date();
    const currentMonth = `${currentDate.getFullYear()}-${String(currentDate.getMonth() + 1).padStart(2, '0')}`;
    
    const monthSelector = document.getElementById('monthSelector');
    for (let i = 0; i < 12; i++) {
        const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);
        const value = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
        const option = document.createElement('option');
        option.value = value;
        option.text = `Th√°ng ${date.getMonth() + 1}/${date.getFullYear()}`;
        if (value === currentMonth) {
            option.selected = true;
        }
        monthSelector.appendChild(option);
    }

    monthSelector.addEventListener('change', updateData);
}

// C·∫≠p nh·∫≠t d·ªØ li·ªáu
async function updateData() {
    try {
        const month = document.getElementById('monthSelector').value;
        const data = await sheetsApi.getAllData(month);
        const totals = sheetsApi.calculateTotals(data);
        
        // C·∫≠p nh·∫≠t c√°c th·∫ª t·ªïng h·ª£p
        document.getElementById('tongNganSach').textContent = totals.tongNganSach.toLocaleString('vi-VN') + 'ƒë';
        document.getElementById('tongChiTieu').textContent = totals.tongChiTieu.toLocaleString('vi-VN') + 'ƒë';
        document.getElementById('conLai').textContent = (totals.tongNganSach - totals.tongChiTieu).toLocaleString('vi-VN') + 'ƒë';
        document.getElementById('tietKiem').textContent = totals.tongTietKiem.toLocaleString('vi-VN') + 'ƒë';

        // C·∫≠p nh·∫≠t b·∫£ng
        updateTable('keHoachTable', data.keHoach);
        updateTable('chiTieuTable', data.chiTieu);

    } catch (error) {
        console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t d·ªØ li·ªáu:', error);
        document.getElementById('error-message').innerHTML = 
            `<div class="alert alert-danger">
                C√≥ l·ªói x·∫£y ra khi t·∫£i d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i sau.
                <br>Chi ti·∫øt: ${error.message}
            </div>`;
    }
}

// C·∫≠p nh·∫≠t b·∫£ng
function updateTable(tableId, data) {
    const tbody = document.querySelector(`#${tableId} tbody`);
    tbody.innerHTML = '';
    
    if (!data || !data.length) {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td colspan="5" class="text-center">Kh√¥ng c√≥ d·ªØ li·ªáu</td>`;
        tbody.appendChild(tr);
        return;
    }

    data.forEach(row => {
        const tr = document.createElement('tr');
        tr.innerHTML = row.map(cell => `<td>${cell || ''}</td>`).join('');
        tbody.appendChild(tr);
    });
}

// Kh·ªüi t·∫°o √¢m nh·∫°c
function initializeMusic() {
    const music = document.getElementById('backgroundMusic');
    const musicControl = document.getElementById('musicControl');
    let isPlaying = false;

    musicControl.innerHTML = '<i class="fas fa-volume-up"></i><i class="fas fa-volume-mute"></i>';
    musicControl.classList.add('muted');

    musicControl.addEventListener('click', () => {
        if (isPlaying) {
            music.pause();
            musicControl.classList.add('muted');
        } else {
            music.play().catch(error => {
                console.log('üéµ Autoplay prevented:', error);
            });
            musicControl.classList.remove('muted');
        }
        isPlaying = !isPlaying;
    });

    document.addEventListener('DOMContentLoaded', () => {
        music.volume = 0.5;
        console.log('üéµ Music initialized');
    });
}

// Kh·ªüi t·∫°o khi DOM ƒë√£ load xong
document.addEventListener('DOMContentLoaded', initializeApp);